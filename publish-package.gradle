apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'org.jetbrains.dokka'

tasks.register('androidSourcesJar', Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        // For android libraries
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        // For pure kotlin libraries, in case you have them
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}

def signingProperties = new Properties()
File signingPropertiesFile = project.rootProject.file('publish-signing.properties')
if (signingPropertiesFile.exists()) {
    signingProperties.load(new FileInputStream(signingPropertiesFile))
}

group = project.group
version = project.ext.version

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    from components.java
                }

                artifact androidSourcesJar
                artifact javadocJar

                groupId project.group
                artifactId project.ext.artifactId
                version project.ext.version

                pom {
                    name = project.ext.name
                    description = project.ext.description
                    url = project.ext.url
                    artifactId = project.ext.artifactId
                    packaging 'aar'

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            name = 'Tal Mirmelshiten'
                            email = 'tal.mirmelshtein@sap.com'
                            organization = 'SAP'
                        }
                    }

                    scm {
                        url = 'https://github.com/SAP/gigya-android-sdk'
                        connection = 'scm:git:git://git@github.com:SAP/gigya-android-sdk.git'
                        developerConnection = 'scm:git:ssh://git@github.com:SAP/gigya-android-sdk.git'
                    }
                }
            }
        }
        repositories {
            maven {
                name = "ossrh-staging-api"
                url = "https://ossrh-staging-api.central.sonatype.com/service/local/staging/deploy/maven2/"

                credentials {
                    username signingProperties['ossrhUsername']
                    password signingProperties['ossrhPassword']
                }
            }
        }
    }
}

tasks.register('javadocJar', Jar) {
    dependsOn dokkaJavadoc
    archiveClassifier.set('javadoc')
    from dokkaJavadoc.outputDirectory
}

artifacts {
    archives androidSourcesJar
    archives javadocJar
}
